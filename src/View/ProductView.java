/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.DBConnection;
import Model.ProductModel;
import Control.ProductController;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Hp
 */
public class ProductView extends javax.swing.JPanel {

    /**
     * Creates new form ProductView
     */
    ProductController produtdetails= new ProductController();
    public ProductView() {
        initComponents();
        ProductController produtdetails= new ProductController();
        TableView(produtdetails.fetchProducts());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
      public boolean getValidation()
    {
        if(textItemCode.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Item Code should be Filled", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
        if(textItemName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Item Name should be Filled", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
        if(textItemPrice.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Item Price should be Filled", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
        if(textItemQty.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Item Quantity should be Filled", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
        if(!textItemQty.getText().matches("^[0-9]+(?:\\.[0-9]+)?$"))
        {
            JOptionPane.showMessageDialog(this, "Item Quantity should contain numbers Only", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
        if(!textItemPrice.getText().matches("^[0-9]+(?:\\.[0-9]+)?$"))
        {
            JOptionPane.showMessageDialog(this, "Item Price should contain numbers Only", "Warning", JOptionPane.WARNING_MESSAGE);                    
            return false;
        }
//         if(!textItemName.getText().matches("^[a-zA-Z]+?$"))
//        {
//            JOptionPane.showMessageDialog(this, "Item Name should contain Letters Only", "Warning", JOptionPane.WARNING_MESSAGE);                    
//            return false;
//        }
         return true;
        
    
    }
    private void TableView(ArrayList<ProductModel> products)
    {
        DefaultTableModel model =(DefaultTableModel) tableAllProduct.getModel();
        
        for(int i=0; i<products.size(); i++)
        {
          Vector vec= new Vector();
          vec.add(products.get(i).itemCode);
          vec.add(products.get(i).itemName);
          vec.add(products.get(i).itemQty);
          vec.add(products.get(i).itemPrice);
          model.addRow(vec);
          
        }
    }
    public void searchProducts(String name)
    {
        ArrayList<ProductModel> searchProducts=produtdetails.searchProducts(name);
        DefaultTableModel model = new DefaultTableModel(new Object[][]
        {}, new String[]{"itemCode", "itemName","itemQty","itemPrice"});
        
        for(int i=0; i<searchProducts.size(); i++)
        {
          Vector vec1= new Vector();
          vec1.add(searchProducts.get(i).itemCode);
          vec1.add(searchProducts.get(i).itemName);
          vec1.add(searchProducts.get(i).itemQty);
          vec1.add(searchProducts.get(i).itemPrice);
          model.addRow(vec1);
        }
        tableAllProduct.setModel(model);
        
    
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProductPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textItemName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textItemPrice = new javax.swing.JTextField();
        buttonAddProduct = new javax.swing.JButton();
        buttonUpdateProduct = new javax.swing.JButton();
        buttonDeleteProduct = new javax.swing.JButton();
        buttonSearch1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        textSerach1 = new javax.swing.JTextField();
        textItemCode = new javax.swing.JTextField();
        textItemQty = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        textSerach2 = new javax.swing.JTextField();
        buttonSearch2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAllProduct = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        ProductPanel.setBackground(new java.awt.Color(255, 255, 255));
        ProductPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProductPanel.setPreferredSize(new java.awt.Dimension(675, 450));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setBackground(new java.awt.Color(51, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Products - Demo");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel8.setInheritsPopupMenu(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(228, 253, 253));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Item Code");

        jLabel3.setText("Item Name");

        jLabel4.setText("Item Quantity");

        jLabel5.setText("Item Price");

        buttonAddProduct.setBackground(new java.awt.Color(51, 0, 204));
        buttonAddProduct.setText("Add New Product");
        buttonAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddProductActionPerformed(evt);
            }
        });

        buttonUpdateProduct.setBackground(new java.awt.Color(255, 255, 153));
        buttonUpdateProduct.setText("Update Existing Product");
        buttonUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateProductActionPerformed(evt);
            }
        });

        buttonDeleteProduct.setBackground(new java.awt.Color(255, 153, 153));
        buttonDeleteProduct.setText("Delete Existing Prodcut");
        buttonDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteProductActionPerformed(evt);
            }
        });

        buttonSearch1.setBackground(new java.awt.Color(153, 204, 255));
        buttonSearch1.setText("Search");
        buttonSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearch1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Search Code");

        textSerach1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textSerach1KeyPressed(evt);
            }
        });

        textItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textItemCodeActionPerformed(evt);
            }
        });

        textItemQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textItemQtyKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textItemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(119, 119, 119)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(textSerach1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonSearch1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(buttonAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(buttonUpdateProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonDeleteProduct)
                        .addGap(31, 31, 31))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSearch1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(textSerach1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(textItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(textItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textItemQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(buttonUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonAddProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(buttonDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(230, 254, 254));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Search Item Name");

        textSerach2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSerach2ActionPerformed(evt);
            }
        });
        textSerach2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSerach2KeyReleased(evt);
            }
        });

        buttonSearch2.setBackground(new java.awt.Color(153, 204, 255));
        buttonSearch2.setText("Search");
        buttonSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearch2ActionPerformed(evt);
            }
        });

        tableAllProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Quantity", "Price per Unit(1kg/1)"
            }
        ));
        tableAllProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAllProductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableAllProduct);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(textSerach2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textSerach2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearch2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ProductPanelLayout = new javax.swing.GroupLayout(ProductPanel);
        ProductPanel.setLayout(ProductPanelLayout);
        ProductPanelLayout.setHorizontalGroup(
            ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ProductPanelLayout.setVerticalGroup(
            ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProductPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ProductPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textItemCodeActionPerformed

    private void buttonAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddProductActionPerformed
        // TODO add your handling code here:
        try{
             if(getValidation()==true){  
                 
                ProductModel product1 = new ProductModel(textItemCode.getText(),
                        textItemName.getText(),
                        textItemQty.getText(),
                        textItemPrice.getText());
                ProductController newproduct= new ProductController(product1);
                          
                if(newproduct.addProduct()==1)
                {
                    JOptionPane.showMessageDialog(this, "Product save Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
                    textItemCode.setText("");
                    textItemName.setText("");
                    textItemQty.setText("");
                    textItemPrice.setText("");
                }
            
                else if(newproduct.addProduct()==2)
                {
                 
                    JOptionPane.showMessageDialog(null, "Product is already exist in the system or may not save", "Error", JOptionPane.ERROR_MESSAGE);
                }  
                else if(newproduct.addProduct()==3)
                    {
                        JOptionPane.showMessageDialog(null, "Product is already exist in the system", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                else if(newproduct.addProduct()==4)
                    {
                        JOptionPane.showMessageDialog(null, "Please Check the Details that you have Entered", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
//             else{
//           getValidation();
//       }
        
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error occurred" ,"Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
            
        
    }//GEN-LAST:event_buttonAddProductActionPerformed

    private void textSerach2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSerach2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_textSerach2ActionPerformed

    private void textSerach2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSerach2KeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()== KeyEvent.VK_ENTER)
        {
            if(textSerach2.getText().length()>0)
            {
                searchProducts(textSerach2.getText());
            } 
        }
    }//GEN-LAST:event_textSerach2KeyReleased

    private void buttonSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearch1ActionPerformed
        // TODO add your handling code here:
     try
        {

          String sql="select * from products where itemCode=?";
          Connection con=DBConnection.createConnection();
          
          String itemCode=textSerach1.getText();
          PreparedStatement statement1=con.prepareStatement(sql);
          statement1.setString(1, itemCode);
          ResultSet rs=statement1.executeQuery();
          
          if(rs.next()== true){
              String code=rs.getString("itemCode");
              String name=rs.getString("itemName");
              String price=rs.getString("itemPrice");
              String qty=rs.getString("itemQty");
              textItemName.setText(name.trim());
              textItemPrice.setText(price.trim());
              textItemQty.setText(qty.trim());
              textItemCode.setText(code.trim());
             
          }
          
          else{
              JOptionPane.showMessageDialog(this, "Item Code Not Found");
              textItemName.setText("");
              textItemPrice.setText("");
          }
          
        }catch(SQLException e)
       {
           JOptionPane.showMessageDialog(this, "Database Error", "Error", JOptionPane.ERROR_MESSAGE);

       } catch (Exception e) {
          JOptionPane.showMessageDialog(this, "Please Check Again", "Error", JOptionPane.ERROR_MESSAGE);
   }
        
    
    }//GEN-LAST:event_buttonSearch1ActionPerformed

    private void textSerach1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSerach1KeyPressed
        // TODO add your handling code here:
        try
        {
          if(evt.getKeyCode()== KeyEvent.VK_ENTER)
          {
          String sql="select * from products where itemCode=?";
          Connection con=DBConnection.createConnection();
          
          String itemCode=textSerach1.getText();
          PreparedStatement statement1=con.prepareStatement(sql);
          statement1.setString(1, itemCode);
          ResultSet rs=statement1.executeQuery();
          
          if(rs.next()== true){
              String code=rs.getString("itemCode");
              String name=rs.getString("itemName");
              String price=rs.getString("itemPrice");
              String qty=rs.getString("itemQty");
              textItemName.setText(name.trim());
              textItemPrice.setText(price.trim());
              textItemQty.setText(qty.trim());
              textItemCode.setText(code.trim());
             
          }
          
          else{
              JOptionPane.showMessageDialog(this, "Item Code Not Found");
              textItemName.setText("");
              textItemPrice.setText("");
          }
          }
         }catch(SQLException e)
       {
           JOptionPane.showMessageDialog(this, "Database Error", "Error", JOptionPane.ERROR_MESSAGE);

       } catch (Exception e) {
          JOptionPane.showMessageDialog(this, "Please Check Again", "Error", JOptionPane.ERROR_MESSAGE);
   }

        
    }//GEN-LAST:event_textSerach1KeyPressed

    private void buttonSearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearch2ActionPerformed
        // TODO add your handling code here:
        if(textSerach2.getText().length()>0)
        {
            searchProducts(textSerach2.getText());
        }

    }//GEN-LAST:event_buttonSearch2ActionPerformed

    private void tableAllProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAllProductMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tableAllProductMouseClicked

    private void buttonUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateProductActionPerformed
        // TODO add your handling code here:
        
       if(getValidation()==true){  
                ProductModel product1 = new ProductModel(textItemCode.getText(),
                        textItemName.getText(),
                        textItemQty.getText(),
                        textItemPrice.getText());
                ProductController newproduct= new ProductController(product1);                
                if(newproduct.updateProduct()==1)
                {
                    JOptionPane.showMessageDialog(this, "Product Updated Successfully", "Add Product to the System", JOptionPane.INFORMATION_MESSAGE);
                    textItemCode.setText("");
                    textItemName.setText("");
                    textItemQty.setText("");
                    textItemPrice.setText("");
                }
                else if(newproduct.updateProduct()==2)
                {
                    System.out.println();
                    JOptionPane.showMessageDialog(null, "Product didn't Updated. Update Again", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
                else if(newproduct.updateProduct()==3)
                {
                JOptionPane.showMessageDialog(null, "Database Errors", "Error", JOptionPane.ERROR_MESSAGE);
                }
            
                else if(newproduct.updateProduct()==3)
                {
                 JOptionPane.showMessageDialog(null, "Please Check the Details that you have Entered", "Error", JOptionPane.ERROR_MESSAGE);
            
                }
                
       }
//       else{
//           getValidation();
//       }
       
    }//GEN-LAST:event_buttonUpdateProductActionPerformed

    private void buttonDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteProductActionPerformed
        // TODO add your handling code here:
        if(getValidation()==true){  

                ProductModel product1 = new ProductModel(textItemCode.getText(),
                        textItemName.getText(),
                        textItemQty.getText(),
                        textItemPrice.getText());
                ProductController newproduct= new ProductController(product1);                
                if(newproduct.deleteProduct()==1)
                {
                    JOptionPane.showMessageDialog(this, "Product Deleted Successfully", "Add Product to the System", JOptionPane.INFORMATION_MESSAGE);
                    textItemCode.setText("");
                    textItemName.setText("");
                    textItemQty.setText("");
                    textItemPrice.setText("");
                }
                else if (newproduct.deleteProduct()==2)
                {
                    JOptionPane.showMessageDialog(null, "Product may not delete", "Error", JOptionPane.ERROR_MESSAGE);
                }  
                
                
                else if (newproduct.deleteProduct()==3)
                {
                    JOptionPane.showMessageDialog(null, "Database Errors", "Error", JOptionPane.ERROR_MESSAGE);
                } 
            
                else if (newproduct.deleteProduct()==4)
                {
                    JOptionPane.showMessageDialog(null, "Please Check the Details that you have Entered", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
//        else{
//           getValidation();
//       }
    }//GEN-LAST:event_buttonDeleteProductActionPerformed

    private void textItemQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textItemQtyKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_textItemQtyKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ProductPanel;
    private javax.swing.JButton buttonAddProduct;
    private javax.swing.JButton buttonDeleteProduct;
    private javax.swing.JButton buttonSearch1;
    private javax.swing.JButton buttonSearch2;
    private javax.swing.JButton buttonUpdateProduct;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableAllProduct;
    private javax.swing.JTextField textItemCode;
    private javax.swing.JTextField textItemName;
    private javax.swing.JTextField textItemPrice;
    private javax.swing.JTextField textItemQty;
    private javax.swing.JTextField textSerach1;
    private javax.swing.JTextField textSerach2;
    // End of variables declaration//GEN-END:variables


    
}
